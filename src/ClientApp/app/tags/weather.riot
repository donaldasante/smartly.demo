<weather>
  <div class="weather">
    <div if={state.loading} id="spinner1">
      <div class="lds-spinner">
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
      </div>    
    </div>
    <table if={!state.loading}>
      <thead>
        <tr>
          <th>Summary</th>
          <th>F</th>
          <th>C</th>
          <th>Date</th>
        </tr>
      </thead>
      <tbody>
        <tr each={forecast in state.forecasts}>
          <td>{forecast.summary}</td>
          <td>{forecast.temperatureF}</td>
          <td>{forecast.temperatureC}</td>
          <td>{forecast.date}</td>
        </tr>
      </tbody>
    </table>
      </hr>
  </div>

  <style scoped>
    .lds-spinner {
      margin: auto;
      color: #1EAEDB;
      display: block;
      position: relative;
      width: 10%;
      height: 40px;
      padding: 5px;
    }
    .lds-spinner div {
      transform-origin: 40px 40px;
      animation: lds-spinner 1.2s linear infinite;
    }
    .lds-spinner div:after {
      content: " ";
      display: block;
      position: absolute;
      top: 3px;
      left: 37px;
      width: 6px;
      height: 18px;
      border-radius: 20%;
      background: #1EAEDB;
    }
    .lds-spinner div:nth-child(1) {
      transform: rotate(0deg);
      animation-delay: -1.1s;
    }
    .lds-spinner div:nth-child(2) {
      transform: rotate(30deg);
      animation-delay: -1s;
    }
    .lds-spinner div:nth-child(3) {
      transform: rotate(60deg);
      animation-delay: -0.9s;
    }
    .lds-spinner div:nth-child(4) {
      transform: rotate(90deg);
      animation-delay: -0.8s;
    }
    .lds-spinner div:nth-child(5) {
      transform: rotate(120deg);
      animation-delay: -0.7s;
    }
    .lds-spinner div:nth-child(6) {
      transform: rotate(150deg);
      animation-delay: -0.6s;
    }
    .lds-spinner div:nth-child(7) {
      transform: rotate(180deg);
      animation-delay: -0.5s;
    }
    .lds-spinner div:nth-child(8) {
      transform: rotate(210deg);
      animation-delay: -0.4s;
    }
    .lds-spinner div:nth-child(9) {
      transform: rotate(240deg);
      animation-delay: -0.3s;
    }
    .lds-spinner div:nth-child(10) {
      transform: rotate(270deg);
      animation-delay: -0.2s;
    }
    .lds-spinner div:nth-child(11) {
      transform: rotate(300deg);
      animation-delay: -0.1s;
    }
    .lds-spinner div:nth-child(12) {
      transform: rotate(330deg);
      animation-delay: 0s;
    }
    @keyframes lds-spinner {
      0% {
        opacity: 1;
      }
      100% {
        opacity: 0;
      }
    }  
  </style>

  <script>
    import axios from 'axios';

    export default {
      components: {
        axios
      },

      onBeforeMount(props, state) {
        // before the component is mounted 
        
        state.loading = true;
        state.forecasts = [];
      },    

      onMounted(props, state) {

        let component = this;
        try {
          axios.get('/api/weatherforecast/10').then(function(response)
          {
            if (response && response.status && response.status === 200 && (typeof response.data !== 'string'))
            {
              component.update({
                forecasts: [... response.data.forecasts],
                loading:false,
              })
            }
          });              
        } catch {
              component.update({
                forecasts: [],
                loading:false,
              })
        }
      }
    }
  </script>
</weather>